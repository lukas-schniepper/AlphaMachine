name: CI  # Name, der im Actions-Tab erscheint
on:
  push:           # bei jedem Push prüfen …
    branches: [main, feature/**]   # … auf main & allen feature-Branches
  pull_request:   # plus alle PRs
    branches: [main]

jobs:
  test:
    runs-on: ubuntu-latest          # GitHub-gehosteter Runner
    steps:
      # 1. Code auschecken
      - uses: actions/checkout@v4
        with:
          submodules: false         # true, falls du Submodules nutzt

      # 2. Python-Version festlegen
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      # 3. Cache für Poetry-Packages (schneller Builds)
      - name: Cache Poetry virtualenv
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: ${{ runner.os }}-poetry-${{ hashFiles('**/poetry.lock') }}
          restore-keys: |
            ${{ runner.os }}-poetry-

      # 4. Dependencies installieren
      - name: Install dependencies
        run: |
          pip install poetry
          poetry install --no-root

      # 5. Lint + Tests
      - name: Ruff lint
        run: poetry run ruff check alphamachine --output-format github
      - name: PyTest
        run: poetry run pytest -q

      # 6. Coverage-Report (optional)
      - name: Upload coverage to Codecov
        if: success() && github.event_name != 'pull_request'
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
